Real Life Data Structures. Linked List and Pseudoclassical Instantiation.

My experience:

We've all heard metaphors of deli lines and the stacking of papers (that is if you've been introduced to stacks and queues), but how often do you actually find use for datastructures? For the first time it has occurred to me that I desperatly need data structures in my life, and I don't know what I would do with out them. It was also the first time I realized, even though they were very well practiced, it was very painful to openly apply them as possible solutions, given real life limitations.

Some one mentioned, "If you're completing a task that requires manual repetition and time, there probably is another approach."

I happened to be migrating data from an api to a neo4j database. This api held big data (3,000 items with multiple properties for each data object). Because of the large amount od data, the api endpoints were limited to 25 items each, including a next property that held the value for the following 25 drinks. After repetedly walking through each request to each endpoint, I realized I was going through the process of a linked list. Thus, my life has saved a days work of boring tedious repetition.




Things to note:

I'm using a constructor function to build this data structure and instantiation it in a pseudo classical pattern.
  To instantiate a data structure, I simply have to use the ```new``` keyword. The new keyword acts automagical and inserts a newly created object inherating it's constructor's protoype, and returns it.
  ```
  var LinkedList = function () {
    //var this = Object.create(LinkedList.prototype);
    this.head = null;
    this.tail = null;
    //return this;
  };
  ```
  I instantiated the above LinkedList constructor as follows:
  ``` 
  var data = new LinkedList();
  ```


